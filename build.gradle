plugins {
    id 'fabric-loom' version '0.9.38'
}

// Add any additional repositories
repositories {
	//maven { name 'Carpet'; url 'https://jitpack.io' }
	maven { name 'Carpet'; url 'https://masa.dy.fi/maven' }
	maven { url "https://maven.nucleoid.xyz/" }
}

archivesBaseName = "${project.mod_id}-mc${project.minecraft_version}"
version = "${project.mod_version}"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

minecraft {
}

loom {
	accessWidener("src/main/resources/easyauth.accesswidener")
}

// Declare dependencies
dependencies {
	// Fabric
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Translations
	modImplementation include("fr.catcore:server-translations-api:${project.server_translations_version}")

	// Mods
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	//modImplementation "com.github.gnembon:fabric-carpet:${project.carpet_branch}-SNAPSHOT"
	modImplementation "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}"

	// Password hashing
	// Argon2
	implementation "de.mkammerer:argon2-jvm:${argon2_version}"
	include "de.mkammerer:argon2-jvm:${argon2_version}"

	// BCrypt
	implementation "at.favre.lib:bcrypt:${bcrypt_version}"
	implementation "at.favre.lib:bytes:${bytes_version}"
	include "at.favre.lib:bcrypt:${bcrypt_version}"
	include "at.favre.lib:bytes:${bytes_version}"

	// Storage
	// LevelDB database
	implementation 'org.iq80.leveldb:leveldb:0.12'
	implementation 'org.iq80.leveldb:leveldb-api:0.12'
	include 'org.iq80.leveldb:leveldb:0.12'
	include 'org.iq80.leveldb:leveldb-api:0.12'

	// MongoDB driver
	implementation 'org.mongodb:mongodb-driver-sync:4.1.0'
	include 'org.mongodb:mongodb-driver-sync:4.1.0'

	// JNA lib
	include 'net.java.dev.jna:jna:5.5.0'

}

// Produce a sources distribution
java {
	withSourcesJar()
}

// Add the licence to the distribution
jar {
	from "LICENCE"
}

// Process any resources
processResources {
	inputs.property 'id', project.mod_id
	inputs.property 'name', project.mod_name
	inputs.property 'version', project.version

	// fabric.mod.json
	filesMatching('fabric.mod.json') {
		expand(['id': project.mod_id, 'name': project.mod_name, 'version': project.version])
	}
}

